---
name: Reviewers based on labels

on:
  pull_request:
    branches:
      - "main"
    types:
      # - opened
      # - synchronize
      # - reopened
      # - edited
      - labeled
      # - unlabeled
  pull_request_review:
    types:
      - submitted

# Limiting token permission to PR only
permissions:
    pull-requests: write
    actions: none
    checks: none
    contents: none
    deployments: none
    issues: none
    packages: none
    repository-projects: none
    security-events: none
    statuses: none

jobs:
  assignreviewers:
    runs-on: ubuntu-latest
    # Check if
    # pull request isn't a draft
    # and
    # required label is present
    if: ${{ !github.event.pull_request.draft }} && contains(github.event.pull_request.labels.*.name, 'DevOps')
    steps:
      - name: Assign Team
        # Check if team isn't already assigned
        if: ${{ !contains(github.event.pull_request.requested_teams.*.slug, 'devops') }}
        uses: actions/github-script@v5
        with:
          script: |
            // Check if team isn't already assigned
            console.log("Ensuring that relevant teams have been assigned")
            console.log(context)
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: "Adding DevOps Team as reviewers"
            })
            github.rest.pulls.createReviewRequest({
              pull_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              reviewers: 'devops'
            })
            // if (context.payload.pull_request.requested_reviewers.length > 0) {
            //   console.log(context.payload.pull_request.requested_reviewers)
            //   console.log(context.payload.pull_request.requested_reviewers.toString())
            //   let reviewers = context.payload.pull_request.requested_reviewers.toString()
            //   github.rest.issues.createComment({
            //     issue_number: context.issue.number,
            //     owner: context.repo.owner,
            //     repo: context.repo.repo,
            //     body: reviewers
            //   })
            // }
      - name: Check if approval has been provided
        if: github.event.review.state == 'approved'
        uses: actions/github-script@v5
        with:
          script: |
            console.log("Ensuring that approvals have been provided")
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: "Failing since approval hasn't been provided by relevant team(s)"
            })
